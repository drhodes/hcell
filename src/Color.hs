module Color where
{-
import Linear
import GHC.Word
import Data.Bits

gray1 = V4 0x1A 0x1A 0x1A 0xFF :: V4 Word8
gray2 = V4 0x2A 0x2A 0x2A 0xFF :: V4 Word8
gray3 = V4 0x3A 0x3A 0x3A 0xFF :: V4 Word8
gray4 = V4 0x4A 0x4A 0x4A 0xFF :: V4 Word8
gray5 = V4 0x5A 0x5A 0x5A 0xFF :: V4 Word8
gray6 = V4 0x6A 0x6A 0x6A 0xFF :: V4 Word8
gray7 = V4 0x7A 0x7A 0x7A 0xFF :: V4 Word8
gray8 = V4 0x8A 0x8A 0x8A 0xFF :: V4 Word8
gray9 = V4 0x9A 0x9A 0x9A 0xFF :: V4 Word8
grayA = V4 0xAA 0xAA 0xAA 0xFF :: V4 Word8
grayB = V4 0xBA 0xBA 0xBA 0xFF :: V4 Word8
grayC = V4 0xCA 0xCA 0xCA 0xFF :: V4 Word8
grayD = V4 0xDA 0xDA 0xDA 0xFF :: V4 Word8
grayE = V4 0xEA 0xEA 0xEA 0xFF :: V4 Word8
grayF = V4 0xFA 0xFA 0xFA 0xFF :: V4 Word8

fromHex :: Word32 -> V4 Word8
fromHex x = let mask amt = fromIntegral $ shiftR x amt .&. 0xFF
                r = mask 24
                g = mask 16
                b = mask 8
                a = mask 0
            in V4 r g b a :: V4 Word8


cellBlue = fromHex 0x00B1FEFF
-}

